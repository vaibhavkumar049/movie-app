{"version":3,"sources":["http-common.js","services/movie-service.js","components/topmovies.component.js","components/movie-detail.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","MovieList","props","retrieveMovie","bind","refreshList","state","movies","currentMovie","currentIndex","searchTitle","c","this","MovieDataService","getAll","then","response","console","log","data","results","setState","catch","e","movie","index","popularity","CardGroup","map","className","Card","style","width","Img","variant","src","poster_path","Body","Title","Text","overview","to","id","Component","MovieDetail","getMovie","match","params","Image","responsive","backdrop_path","fluid","title","Button","href","homepage","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"sPAEeA,MAAMC,OAAO,CACxBC,QAAS,4GACTC,QAAS,CACL,eAAgB,sBC2BT,M,iGA5BP,OAAOC,EAAKC,U,sBCCCC,E,kDACpB,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAEnB,EAAKE,MAAQ,CACRC,OAAQ,GACRC,aAAc,KACdC,cAAe,EACfC,YAAa,GACbC,EAAE,IAVU,E,gEAgBfC,KAAKT,kB,sCAGU,IAAD,OACdU,EAAiBC,SACdC,MAAK,SAAAC,GACLC,QAAQC,IAAI,OACX,EAAKP,EAAEK,EAASG,KAAKC,QACtBH,QAAQC,IAAI,EAAKP,GAChB,EAAKU,SAAS,CACZd,OAAQ,EAAKI,IAEfM,QAAQC,IAAIF,EAASG,KAAKC,YAE3BE,OAAM,SAAAC,GACLN,QAAQC,IAAIK,Q,oCAKhBX,KAAKT,gBACLS,KAAKS,SAAS,CACZb,aAAc,KACdC,cAAe,M,qCAIHe,EAAOC,GACrBb,KAAKS,SAAS,CACZb,aAAcgB,EACdf,aAAcgB,M,+BAGR,IAAD,EACoDb,KAAKN,MAAzDI,EADA,EACAA,YAAaH,EADb,EACaA,OAAsBE,GADnC,EACqBD,aADrB,EACmCC,cAC3C,OACC,gCACA,6BAAKC,IACL,6BAAKH,EAAOmB,aACZ,cAACC,EAAA,EAAD,UACSpB,GACCA,EAAOqB,KAAI,SAACJ,EAAOC,GAAR,OACT,qBACEI,UACE,oBACCJ,IAAUhB,EAAe,SAAW,IAHzC,UAQA,eAACqB,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACV,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAK,kCAAkCX,EAAMY,cACrE,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,uBACA,cAACR,EAAA,EAAKS,KAAN,UACGf,EAAMgB,WAGT,cAAC,IAAD,CACUC,GAAI,UAAYjB,EAAMkB,GADhC,mCAhBQ,cA0BalB,EAAME,aApBZD,e,GAjEgBkB,a,gBCAlBC,E,kDAEpB,WAAY1C,GAAO,IAAD,8BACjB,cAAMA,IAEDI,MAAM,CACVE,aAAa,CACZ,OAAQ,EACR,cAAgB,GAChB,sBAAwB,KACxB,OAAS,EAAE,OAAS,CAAC,CAAC,GAAK,GAAG,KAAO,YACrC,CAAC,GAAK,GAAG,KAAO,UAAU,CAAC,GAAK,GAAG,KAAO,SAC1C,CAAC,GAAK,GAAG,KAAO,UAChB,SAAW,GAAG,GAAK,KACnB,QAAU,GACV,kBAAoB,KAAK,eAAiB,QAAQ,SAAW,6JAAwJ,WAAa,SAAS,YAAc,mCAAmC,qBAAuB,CAAC,CAAC,GAAK,EAAE,UAAY,mCAAmC,KAAO,UAAU,eAAiB,OAAO,qBAAuB,CAAC,CAAC,WAAa,KAAK,KAAO,WAAW,aAAe,aAAa,QAAU,EAAE,QAAU,IAAI,iBAAmB,CAAC,CAAC,UAAY,KAAK,KAAO,gBAAa,OAAS,WAAW,QAAU,GAAG,MAAQ,aAAa,OAAQ,EAAM,aAAe,IAAI,WAAa,MAbtpB,E,gEAmBfI,KAAKiC,SAASjC,KAAKV,MAAM4C,MAAMC,OAAOL,M,+BAE/BA,GAAK,IAAD,OACZ/C,IAAMK,IAAN,6CAAgD0C,EAAhD,oEACI3B,MAAK,SAAAC,GACJ,EAAKK,SAAS,CACZb,aAAcQ,EAASG,OAEzBF,QAAQC,IAAIF,EAASG,SAEtBG,OAAM,SAAAC,GACLN,QAAQC,IAAIK,Q,+BAGR,IACFf,EAAgBI,KAAKN,MAArBE,aAaP,OAEE,sBAAKuB,MAAO,CAACC,MAAO,QAApB,UACW,cAACgB,EAAA,EAAD,CACGC,YAAU,EACXd,IAAK,kCAAkC3B,EAAa0C,cAAeC,OAAK,IAC1E,6BAAK3C,EAAa4C,QAJ7B,WAMW,4BAAI5C,EAAagC,WACjB,mDAAsBhC,EAAakB,cACnC,cAAC2B,EAAA,EAAD,CAAQC,KAAM9C,EAAa+C,SAA3B,yB,GA3DyBZ,aCiC1Ba,E,uKA5BX,OACE,gCACE,sBAAK3B,UAAU,2CAAf,UACE,mBAAGyB,KAAK,UAAUzB,UAAU,eAA5B,oBAGA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMY,GAAI,UAAWZ,UAAU,WAA/B,0BAIF,oBAAIA,UAAU,mBAKlB,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAM,CAAC,IAAK,WAAYC,UAAW1D,IAChD,cAAC,IAAD,CAAOyD,KAAK,aAAaC,UAAWf,gB,GAtB9BD,aCIEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCXNkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdlD,OAAM,SAAAmD,GACLxD,QAAQwD,MAAMA,EAAMC,c","file":"static/js/main.33b1e224.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://api.themoviedb.org/3/movie/popular?api_key=29e521c80dba636ea58bfc8d83baad6f&language=en-US&page=1\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","import http from \"../http-common\";\n\nclass MovieDataService {\n    getAll() {\n        return http.get();\n    }\n\n    // get(id) {\n    //     return http.get(`/tutorials/${id}`);\n    // }\n\n    // create(data) {\n    //     return http.post(\"/tutorials\", data);\n    // }\n\n    // update(id, data) {\n    //     return http.put(`/tutorials/${id}`, data);\n    // }\n\n    // delete(id) {\n    //     return http.delete(`/tutorials/${id}`);\n    // }\n\n    // deleteAll() {\n    //     return http.delete(`/tutorials`);\n    // }\n\n    // findByTitle(title) {\n    //     return http.get(`/tutorials?title=${title}`);\n    // }\n}\n\nexport default new MovieDataService();","import React, { Component } from \"react\";\nimport MovieDataService from \"../services/movie-service\";\nimport { Link } from \"react-router-dom\";\nimport { Button,Card, CardGroup } from 'react-bootstrap';\n\nexport default class MovieList extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.retrieveMovie = this.retrieveMovie.bind(this);\n\t\tthis.refreshList = this.refreshList.bind(this);\n\t\t// movies : []\n\t\tthis.state = {\n\t      movies: [],\n\t      currentMovie: null,\n\t      currentIndex: -1,\n\t      searchTitle: \"\",\n\t      c:[]\n\t    };\n\n\t}\n\n\tcomponentDidMount() {\n    this.retrieveMovie();\n  }\n\n  retrieveMovie() {\n    MovieDataService.getAll()\n      .then(response => {\n      \tconsole.log(\"hey\")\n        this.c=response.data.results\n      \tconsole.log(this.c)\n        this.setState({\n          movies: this.c\n        });\n        console.log(response.data.results);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveMovie();\n    this.setState({\n      currentMovie: null,\n      currentIndex: -1\n    });\n  }\n\n   setActiveMovie(movie, index) {\n    this.setState({\n      currentMovie: movie,\n      currentIndex: index\n    });\n  }\n  render() {\n  \tconst { searchTitle, movies, currentMovie, currentIndex } = this.state;\n  \treturn (\n  \t\t<div>\n  \t\t<h1>{searchTitle}</h1>\n  \t\t<h1>{movies.popularity}</h1>\n  \t\t<CardGroup>\n            {movies &&\n              movies.map((movie, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  \n                  key={index}\n                >\n                <Card style={{ width: '18rem' }}>\n\t\t\t\t  <Card.Img variant=\"top\" src={\"http://image.tmdb.org/t/p/w185/\"+movie.poster_path} />\n\t\t\t\t  <Card.Body>\n\t\t\t\t    <Card.Title>Overview</Card.Title>\n\t\t\t\t    <Card.Text>\n\t\t\t\t      {movie.overview}\n\t\t\t\t    </Card.Text>\n\t\t\t\t    \n\t\t\t\t    <Link\n\t\t                to={\"/movie/\" + movie.id}\n\t\t                \n\t\t              >\n                \tSee More Detail\n              \t\t</Link>\n              \t\t\n\t\t\t\t    \t\n\t\t\t\t  </Card.Body>\n\t\t\t\t</Card>\n                 Popularity {movie.popularity}\n                </li>\n              ))}\n          \n          </CardGroup>\n          \n  \t\t</div>\n  \t\t);\n  }\n}","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Image from 'react-bootstrap/Image'\nimport {Button} from 'react-bootstrap'\n\nexport default class MovieDetail extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state={\n\t\t\tcurrentMovie:{\n\t\t\t\t\"adult\":false,\n\t\t\t\t\"backdrop_path\":\"\",\n\t\t\t\t\"belongs_to_collection\":null,\n\t\t\t\t\"budget\":0,\"genres\":[{\"id\":53,\"name\":\"Thriller\"},\n\t\t\t\t{\"id\":28,\"name\":\"Action\"},{\"id\":18,\"name\":\"Drama\"},\n\t\t\t\t{\"id\":80,\"name\":\"Crime\"}],\n\t\t\t\t\"homepage\":\"\",\"id\":null,\n\t\t\t\t\"imdb_id\":\"\",\n\t\t\t\t\"original_language\":\"fr\",\"original_title\":\"Bronx\",\"overview\":\"Caught in the crosshairs of police corruption and Marseille’s warring gangs, a loyal cop must protect his squad by taking matters into his own hands.\",\"popularity\":2234.266,\"poster_path\":\"/9HT9982bzgN5on1sLRmc1GMn6ZC.jpg\",\"production_companies\":[{\"id\":9,\"logo_path\":\"/nda3dTUYdDrJ6rZqBpYvY865aDv.png\",\"name\":\"Gaumont\",\"origin_country\":\"FR\"}],\"production_countries\":[{\"iso_3166_1\":\"FR\",\"name\":\"France\"}],\"release_date\":\"2020-10-30\",\"revenue\":0,\"runtime\":116,\"spoken_languages\":[{\"iso_639_1\":\"fr\",\"name\":\"Français\"}],\"status\":\"Released\",\"tagline\":\"\",\"title\":\"Rogue City\",\"video\":false,\"vote_average\":6.1,\"vote_count\":184\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n    this.getMovie(this.props.match.params.id);\n  }\n  getMovie(id) {\n  \taxios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=29e521c80dba636ea58bfc8d83baad6f&language=en-US&page=1`)\n      .then(response => {\n        this.setState({\n          currentMovie: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n  \tconst {currentMovie} = this.state;\n  \tvar background = {\n  \t\tbackgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        width: '100vw',\n        height: '100vh'\n  \t};\n\tvar textStyle = {\n\t  position: 'absolute', \n\t  top: '50%', \n\t  left: '50%'\n\t};\n  \treturn (\n\n  \t\t\t<div style={{width: 'auto'}}>\n                <Image \n                   responsive \n                  src={\"http://image.tmdb.org/t/p/w185/\"+currentMovie.backdrop_path} fluid/>\n                <h1>{currentMovie.title}</h1>\n                Overview\n                <p>{currentMovie.overview}</p>\n                <p> Movie Popularity {currentMovie.popularity}</p>\n                <Button href={currentMovie.homepage}>Link</Button>\n            </div>\n  \t\t)\n  }\n\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport MovieList from \"./components/topmovies.component\";\nimport MovieDetail from \"./components/movie-detail.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/movies\" className=\"navbar-brand\">\n            Movies\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/movies\"} className=\"nav-link\">\n                Top Movies\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/movies\"]} component={MovieList} />\n            <Route path=\"/movie/:id\" component={MovieDetail} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}